point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x|mean,sd)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x|mean,sd)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x)-1, point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
x <- rnorm(100)
deviance.function(x, mean=0, sd=1)
deviance.function <- function(x, mean, sd)
{
LL <- dnorm(x=x, mean=mean, sd=sd, log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
# it's a function of model parameters, so try to play
# around with different paramter values
deviance.function(wings, mean=0, sd=1)
x <- rnorm(100)
deviance.function(x, mean=0, sd=1)
wings <- read.table("http://goo.gl/4lPBG6", header=FALSE)[,1]*0.1
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=10))
hist(wings, freq=FALSE, col="grey")
points(wings, jitter(rep(0, times=100), factor=0.7))
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=1, sd=1")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4, sd=2), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4, sd=2")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=2, sd=3), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=2, sd=3")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4.5, sd=0.7), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.1))
my.mean = 4
my.sd = 1
wings.i <- wings[1]
wings.i
L <- dnorm(x=wings.i, mean=my.mean, sd=my.sd)
L
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
abline(v=wings.i, col="red")
abline(h=L, col="red")
wings
L <- dnorm(x=wings, mean=my.mean, sd=my.sd)
L
prod(L)
- sum(log(L))
deviance.function <- function(x, mean, sd)
{
LL <- dnorm(x=x, mean=mean, sd=sd, log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
# it's a function of model parameters, so try to play
# around with different paramter values
deviance.function(wings, mean=0, sd=1)
deviance.function()
hist()
curve()
deviance.function.wings <- function(par)
{
LL <- dnorm(x=wings, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(0,1),deviance.function.wings)
deviance.function.wings <- function(par, dat)
{
LL <- dnorm(x=dat, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(0,1),deviance.function.wings, dat=wings)
optim(par=c(0,1),deviance.function.wings, dat=rnorm(100))
?optim
deviance.function.wings <- function(par, dat)
{
LL <- dnorm(x=dat, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(mean=0,var=1),
fn=deviance.function.wings,
dat=wings)
wings <- read.table("http://goo.gl/4lPBG6", header=FALSE)[,1]*0.1
library(manipulate)
manipulate(
curve(dnorm(x, mean=mean, sd=sd), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.1)),
mean=slider(0, 7),
sd=slider(0,3)
)
library(manipulate)
manipulate(
curve(dnorm(x, mean=mean, sd=sd), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.1)),
mean=slider(0, 7),
sd=slider(0,3)
)
library(manipulate)
normal.curve <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
}
manipulate( normal.curve(mean, sd), mean=slider(0, 7), sd=slider(0,3) )
library(manipulate)
normal.curve <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
}
manipulate( normal.curve(mean, sd), mean=slider(0, 7), sd=slider(0,3) )
library(manipulate)
normal.curve <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
}
manipulate( normal.curve(mean, sd), mean=slider(0, 7), sd=slider(0,3) )
?slider
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=1, sd=1")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4, sd=2), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4, sd=2")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=2, sd=3), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=2, sd=3")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4.5, sd=0.7), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.1))
library(manipulate)
curve.and.data <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
}
manipulate( curve.and.data(mean, sd), mean=slider(0, 7), sd=slider(0.1,3) )
library(manipulate)
curve.and.data <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=1, to=6, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.3))
}
manipulate( curve.and.data(mean, sd), mean=slider(0, 7), sd=slider(0.1,3) )
?slider
library(manipulate)
curve.and.data <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.3))
}
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01) )
sd=slider(0.1,3, step=0.01) )
library(manipulate)
curve.and.data <- function(mean, sd)
{
curve(dnorm(x, mean=mean, sd=sd), from=2, to=6, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.3))
}
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01) )
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01) )
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01) )
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.and.data(mean, sd),
mean=slider(0, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.and.data(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
?abline
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
my.mean = 4
my.sd = 1
wings.i <- wings[1]
wings.i
wings.i <- wings[1]
wings.i
L <- dnorm(x=wings.i, mean=my.mean, sd=my.sd)
L
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
abline(v=wings.i, col="red")
abline(h=L, col="red")
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
?segment
?segments
segments(wings.i, 0, wings.i, L)
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
segments(wings.i, 0, wings.i, L)
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
segments(x0=wings.i, y0=0, x1=wings.i, y1=L, col="red")
segments(x0=0, y0=L, x1=wings.i, y1=L, col="red")
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
segments(x0=wings.i, y0=0, x1=wings.i, y1=L, col="red")
segments(x0=0, y0=L, x1=wings.i, y1=L, col="red")
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
segments(x0=wings.i, y0=0, x1=wings.i, y1=L, col="red")
segments(x0=-1, y0=L, x1=wings.i, y1=L, col="red")
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
segments(x0=wings.i, y0=0, x1=wings.i, y1=L, col="red")
segments(x0=-1, y0=L, x1=wings.i, y1=L, col="red")
library(manipulate)
curve.data.l.point <- function(mean, sd, point)
{
curve(dnorm(x, mean, sd), from=2, to=6,
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[point], y0=0, x1=wings[point], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[point], y1=L, col="red")
points(wings, rep(0, 100))
points(wings.i, 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
curve.data.l.point <- function(mean, sd, point)
{
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[point], y0=0, x1=wings[point], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[point], y1=L, col="red")
points(wings, rep(0, 100))
points(wings.i, 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
curve.data.l.point <- function(mean, sd, i)
{
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[i], y0=0, x1=wings[i], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[i], y1=L, col="red")
points(wings, rep(0, 100))
points(wings[i], 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
curve.data.l.point <- function(mean, sd, i)
{
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
L <- dnorm(x=wings[i], mean=mean, sd=sd)
segments(x0=wings[i], y0=0, x1=wings[i], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[i], y1=L, col="red")
points(wings, rep(0, 100))
points(wings[i], 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
X11()
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
X11()
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
X11()
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.l.point <- function(mean, sd, i)
{
L <- dnorm(x=wings[i], mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[i], y0=0, x1=wings[i], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[i], y1=L, col="red")
points(wings, rep(0, 100))
points(wings[i], 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.l.point <- function(mean, sd, i)
{
L <- dnorm(x=wings[i], mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[i], y0=0, x1=wings[i], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[i], y1=L, col="red")
points(wings, rep(0, 100))
points(wings[i], 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.l.point <- function(mean, sd, i)
{
L <- dnorm(x=wings[i], mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings.i | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
segments(x0=wings[i], y0=0, x1=wings[i], y1=L, col="red")
segments(x0=-1, y0=L, x1=wings[i], y1=L, col="red")
points(wings, rep(0, 100))
points(wings[i], 0, pch=19)
}
manipulate(curve.data.l.point(mean, sd, point),
point = slider(1, length(wings)),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.ll <- function(mean, sd)
{
LL <- deviance.function(wings, mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("Deviance = ", round(LL, 4)))
points(wings, rep(0, 100))
}
manipulate(curve.data.ll(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
deviance.function <- function(x, mean, sd)
{
LL <- dnorm(x=x, mean=mean, sd=sd, log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
# it's a function of model parameters, so try to play
# around with different paramter values
deviance.function(wings, mean=0, sd=1)
library(manipulate)
curve.data.ll <- function(mean, sd)
{
LL <- deviance.function(wings, mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 0.6),
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("Deviance = ", round(LL, 4)))
points(wings, rep(0, 100))
}
manipulate(curve.data.ll(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.ll <- function(mean, sd)
{
LL <- deviance.function(wings, mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 1),
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("Deviance = ", round(LL, 4)))
points(wings, rep(0, 100))
}
manipulate(curve.data.ll(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
curve.data.deviance <- function(mean, sd)
{
LL <- deviance.function(wings, mean=mean, sd=sd)
curve(dnorm(x, mean, sd), from=2, to=6, ylim=c(0, 1),
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("Deviance = ", round(LL, 4)))
points(wings, rep(0, 100))
}
manipulate(curve.data.deviance(mean, sd),
mean=slider(2, 7, step=0.01),
sd=slider(0.1,3, step=0.01, initial=1) )
library(manipulate)
source("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Univariate%20Normal%20Model/plotting_functions.r")
library(manipulate)
source("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Univariate%20Normal%20Model/plotting_functions.r")
