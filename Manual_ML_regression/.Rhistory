write.csv(data.frame(x,y), file="xy_data.csv", row.names=FALSE)
x <- rnorm(100)
y <- 2.5 + 4.1 * x + rnorm(100, sd=1.5)
plot(x, y)
write.csv(data.frame(x,y), file="xy_data.csv", row.names=FALSE)
x <- rnorm(100)
y <- 2.5 + 3.1 * x + rnorm(100, sd=1.5)
plot(x, y)
write.csv(data.frame(x,y), file="xy_data.csv", row.names=FALSE)
x <- round(rnorm(100), 2)
y <- round(2.5 + 3.1 * x + rnorm(100, sd=1.5), 2)
plot(x, y)
write.csv(data.frame(x,y), file="xy_data.csv", row.names=FALSE)
x <- round(rnorm(100), 2) + 5
y <- round(2.5 + 3.1 * x + rnorm(100, sd=1.5), 2)
plot(x, y)
write.csv(data.frame(x,y), file="xy_data.csv", row.names=FALSE)
xy <- read.table("xy_data.csv")
xy <- read.csv("xy_data.csv")
xy
library(manipulate)
?manipulate
?slider
manipulate{
plot(xy),
slope = slider(min=-10, max=10, step=0.01),
intercept = (min=-10, max=10, step=0.01),
sd = slider(min=0, max=5, step=0.01)
)
manipulate(
plot(xy),
slope = slider(min=-10, max=10, step=0.01),
intercept = (min=-10, max=10, step=0.01),
sd = slider(min=0, max=5, step=0.01)
)
plot(xy)
manipulate(
plot(xy),
slope = slider(min=-10, max=10, step=0.01),
intercept = (min=-10, max=10, step=0.01),
sd = slider(min=0, max=5, step=0.01)
)
library(manipulate)
myplot <- function(xy, beta0, beta1, sigma)
{
plot(xy)
abline(beta0, beta1)
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01),
beta1 = slider(min=-10, max=10, step=0.01),
sigma = slider(min=0, max=5, step=0.01)
)
xy <- read.csv("xy_data.csv")
xy
library(manipulate)
myplot <- function(xy, beta0, beta1, sigma)
{
plot(xy)
abline(beta0, beta1)
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01),
beta1 = slider(min=-10, max=10, step=0.01),
sigma = slider(min=0, max=5, step=0.01)
)
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01),
beta1 = slider(min=-10, max=10, step=0.01),
sigma = slider(min=0, max=5, step=0.01)
)
myplot <- function(xy, beta0, beta1, sigma)
{
plot(xy)
abline(a=beta0, b=beta1)
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01),
beta1 = slider(min=-10, max=10, step=0.01),
sigma = slider(min=0, max=5, step=0.01)
)
?slider
library(manipulate)
myplot <- function(xy, beta0, beta1, sigma)
{
plot(xy)
abline(a=beta0, b=beta1)
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01, initial=0),
beta1 = slider(min=-10, max=10, step=0.01, initial=0),
sigma = slider(min=0, max=5, step=0.01, initial=1)
)
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01, initial=0),
beta1 = slider(min=-10, max=10, step=0.01, initial=0),
sigma = slider(min=0, max=5, step=0.01, initial=1)
)
xy <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Manual_ML_regression/xy_data.csv")
xy
xy <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Manual_ML_regression/xy_data.csv")
xy
myplot <- function(xy, beta0, beta1, sigma)
{
x <-xy$x
mean.y <- beta0 + beta1*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.ll <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
plot(xy, main=paste("Neg. log-likelihood = ", neg.ll))
lines(new.x, mean.y, col="red")
lines(new.x, low.y, lty=2, col="red")
lines(new.x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01, initial=3),
beta1 = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
library(manipulate)
myplot <- function(xy, beta0, beta1, sigma)
{
x <-xy$x
mean.y <- beta0 + beta1*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.ll <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
plot(xy, main=paste("Neg. log-likelihood = ", neg.ll))
lines(new.x, mean.y, col="red")
lines(new.x, low.y, lty=2, col="red")
lines(new.x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01, initial=3),
beta1 = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
myplot <- function(xy, beta0, beta1, sigma)
{
x <-xy$x
mean.y <- beta0 + beta1*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.ll <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
plot(xy, main=paste("Neg. log-likelihood = ", neg.ll))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, beta0, beta1, sigma),
beta0 = slider(min=-10, max=10, step=0.01, initial=3),
beta1 = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.ll <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
plot(xy, main=paste("Neg. LL =", neg.ll, "a=", a, "b=", b))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-10, max=10, step=0.01, initial=3),
b = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL=", neg.LL, ", a=", a, ", b=", b, sep=""))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-10, max=10, step=0.01, initial=3),
b = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL=", neg.LL, ", a=", a, ", b=", b, ", sigma=", sigma, sep=""))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-10, max=10, step=0.01, initial=3),
b = slider(min=-10, max=10, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=5, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL =", neg.LL))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL (a.k.a. deviance) =", neg.LL))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
xy <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Manual_ML_regression/xy_data.csv")
xy
library(manipulate)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL (a.k.a. deviance) =", neg.LL))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
xy <- read.csv("https://raw.githubusercontent.com/petrkeil/ML_and_Bayes_2017_iDiv/master/Manual_ML_regression/xy_data.csv")
xy
library(manipulate)
myplot <- function(xy, a, b, sigma)
{
x <-xy$x
mean.y <- a + b*x
low.y  <- qnorm(0.025, mean.y, sigma)
up.y <- qnorm(0.975, mean.y, sigma)
neg.LL <- - sum(dnorm(xy$y, mean=mean.y, sd=sigma, log=TRUE))
neg.LL <- round(neg.LL, 3)
plot(xy, main=paste("Neg. LL =", neg.LL))
lines(x, mean.y, col="red")
lines(x, low.y, lty=2, col="red")
lines(x, up.y, lty=2, col="red")
}
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
neg.LL.function.for.optim <- function(par, dat)
{
x <- dat$x
y <- dat$y
LL <- dnorm(x=dat, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
neg.LL <- - sum(LL)
return(neg.LL)
}
optim(par=c(mean=0,var=1),
fn=neg.LL.function.for.optim,
dat=xy)
neg.LL.function.for.optim <- function(par, dat)
{
x <- dat$x
y <- dat$y
LL <- dnorm(y, mean=par[1] + par[2]*x, sd=par[3], log=TRUE)
neg.LL <- - sum(LL)
return(neg.LL)
}
optim(par=c(a=0, b=0, sd=1),
fn=neg.LL.function.for.optim,
dat=xy)
?optim
neg.LL.function.for.optim <- function(par, dat)
{
x <- dat$x
y <- dat$y
a <- par[1]
b <- par[2]
sd <- par[3]
LL <- dnorm(y, mean=a + b*x, sd=sd, log=TRUE)
neg.LL <- - sum(LL)
return(neg.LL)
}
optim(par=c(a=0, b=0, sd=1),
fn=neg.LL.function.for.optim,
dat=xy)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
manipulate(
myplot(xy, a, b, sigma),
a = slider(min=-5, max=5, step=0.01, initial=3),
b = slider(min=-5, max=5, step=0.01, initial=4),
sigma = slider(min=0, max=3, step=0.01, initial=0.1)
)
