install.packages("runjags")
install.packages("rjags")
library(survival)
?survreg
cancer <- read.table("http://goo.gl/3cnoam", header=TRUE)
cancer
censored <- cancer$status==0
is.censored <- censored*1
t.to.death <- cancer$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- cancer$death[censored]
t.cen
# put the data together for JAGS
cancer.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(cancer),
group = rep(1:4, each=30))
cancer.data
head(cancer)
cancer <- read.table("http://goo.gl/3cnoam", header=TRUE)
head(cancer)
roaches <- read.table("http://goo.gl/NvtpNb", header=TRUE)
summary(roaches)
m1 <- survreg(Surv(death, status) ~ group, dist="exponential")
m1 <- survreg(Surv(death, status) ~ group, dist="exponential", data=roaches)
m1
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential", data=roaches)
m1
m1 <- survreg(Surv(death, status) ~ weight, data=roaches)
m1
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential",  data=roaches)
m1
summary(m1)
head(roaches)
censored <- roaches$status==0
is.censored <- censored*1
t.to.death <- roaches$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- roaches$death[censored]
t.cen
# put the data together for JAGS
roaches.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(roaches))
?survreg
head(roaches)
censored <- roaches$status==0
is.censored <- censored*1
t.to.death <- roaches$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- roaches$death[censored]
t.cen
# put the data together for JAGS
roaches.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(roaches),
weight = roaches$weight)
cat("
model
{
# priors
for(i in 1:N)
{
# prior lambda for each group
# lambda[j] ~ dgamma(0.001, 0.001)
beta0 ~ dnorm(0, 0.001)
beta1 ~ dnorm(0, 0.001)
}
# likelihood
for(i in 1:N)
{
is.censored[i] ~ dinterval(t.to.death[i], t.cen[i])
t.to.death[i] ~ dexp(lambda[i])
log(lambda[i]) <- beta0 + beta1*weight[i]
mu[i] <- 1/lambda[i] # mean time to death
}
}
", file="survival_roaches.txt")
library(runjags)
library(coda)
roaches.fit <- run.jags(data = cancer.data,
model = "roaches_cancer.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
library(runjags)
library(coda)
roaches.fit <- run.jags(data = cancer.data,
model = "survival_roaches.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
censored <- roaches$status==0
is.censored <- censored*1
t.to.death <- roaches$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- roaches$death[censored]
t.cen
# put the data together for JAGS
roaches.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(roaches),
weight = roaches$weight)
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
censored <- roaches$status==0
is.censored <- censored*1
t.to.death <- roaches$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- roaches$death[censored]
t.cen
# put the data together for JAGS
roaches.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(roaches),
weight = roaches$weight)
cat("
model
{
# priors
for(i in 1:N)
{
# prior lambda for each group
# lambda[j] ~ dgamma(0.001, 0.001)
beta0 ~ dnorm(0, 0.001)
beta1 ~ dnorm(0, 0.001)
}
# likelihood
for(i in 1:N)
{
is.censored[i] ~ dinterval(t.to.death[i], t.cen[i])
t.to.death[i] ~ dexp(lambda[i])
log(lambda[i]) <- beta0 + beta1*weight[i]
mu[i] <- 1/lambda[i] # mean time to death
}
}
", file="survival_roaches.txt")
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
cat("
model
{
# priors
# prior lambda for each group
# lambda[j] ~ dgamma(0.001, 0.001)
beta0 ~ dnorm(0, 0.001)
beta1 ~ dnorm(0, 0.001)
# likelihood
for(i in 1:N)
{
is.censored[i] ~ dinterval(t.to.death[i], t.cen[i])
t.to.death[i] ~ dexp(lambda[i])
log(lambda[i]) <- beta0 + beta1*weight[i]
mu[i] <- 1/lambda[i] # mean time to death
}
}
", file="survival_roaches.txt")
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
summary(roaches.fit)
summary(m1)
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
summary(roaches.fit)
library(survival)
roaches <- read.table("http://goo.gl/NvtpNb", header=TRUE)
summary(roaches)
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential",  data=roaches)
summary(m1)
censored <- roaches$status==0
is.censored <- censored*1
t.to.death <- roaches$death
t.to.death[censored] <- NA
t.to.death
t.cen <- rep(0, times=length(censored))
t.cen[censored] <- roaches$death[censored]
t.cen
# put the data together for JAGS
roaches.data <- list(t.to.death = t.to.death,
t.cen = t.cen,
N = nrow(roaches),
weight = roaches$weight)
cat("
model
{
# priors
# prior lambda for each group
# lambda[j] ~ dgamma(0.001, 0.001)
beta0 ~ dnorm(0, 0.001)
beta1 ~ dnorm(0, 0.001)
# likelihood
for(i in 1:N)
{
is.censored[i] ~ dinterval(t.to.death[i], t.cen[i])
t.to.death[i] ~ dexp(lambda[i])
log(lambda[i]) <- beta0 + beta1*weight[i]
mu[i] <- 1/lambda[i] # mean time to death
}
}
", file="survival_roaches.txt")
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta0", "beta1"),
sample = 1000, burnin = 1000, n.chains = 3)
summary(roaches.fit)
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta0", "beta1"),
sample = 10000, burnin = 5000, n.chains = 3)
summary(roaches.fit)
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential",  data=roaches)
summary(m1)
summary(roaches.fit)
summary(roaches.fit)
summary(roaches.fit)
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential",  data=roaches)
summary(m1)
exp(-2.4)
cat("
model
{
# priors
beta0 ~ dnorm(0, 0.001)
beta1 ~ dnorm(0, 0.001)
# likelihood
for(i in 1:N)
{
is.censored[i] ~ dinterval(t.to.death[i], t.cen[i])
t.to.death[i] ~ dexp(lambda[i])
#log(lambda[i]) <- beta0 + beta1*weight[i]
#mu[i] <- 1/lambda[i] # mean time to death
lambda[i] <- 1/mu[i]
log(mu[i]) <- beta0 + beta1*weight[i]
}
}
", file="survival_roaches.txt")
library(runjags)
library(coda)
roaches.fit <- run.jags(data = roaches.data,
model = "survival_roaches.txt",
monitor = c("beta0", "beta1"),
sample = 10000, burnin = 5000, n.chains = 3)
summary(roaches.fit)
m1 <- survreg(Surv(death, status) ~ weight, dist="exponential",  data=roaches)
summary(m1)
hist(roaches.fit)
plot(roaches.fit)
par(mfrow=c(1,2))
densplot(as.mcmc(cancer.fit), xlim=c(2,20))
densplot(as.mcmc(roaches.fit), xlim=c(2,20))
densplot(as.mcmc(roaches.fit))
as.mcmc(roaches.fit)
a <- as.mcmc(roaches.fit)
str(a)
?densplot
densplot
class(a)
a[[1]]
a[[2]]
a$beta0
a@beta0
str(a)
head(a)
densplot(as.mcmc(roaches.fit)[,1])
densplot(as.mcmc(roaches.fit)$beta0)
densplot(as.mcmc(roaches.fit)[,"beta0"])
densplot(as.mcmc(roaches.fit)[,"beta0"])
densplot(as.mcmc(roaches.fit)[,"beta1"])
m1
m1$coef
abline(v=m1$coef[1])
summary(roaches.fit)
par(mfrow=c(1,2))
densplot(as.mcmc(roaches.fit)[,"beta0"])
abline(v=m1$coef[1])
densplot(as.mcmc(roaches.fit)[,"beta1"])
abline(v=m1$coef[2])
summary(roaches.fit)
par(mfrow=c(1,2))
densplot(as.mcmc(roaches.fit)[,"beta0"], xlim=c(1,4))
abline(v=m1$coef[1])
densplot(as.mcmc(roaches.fit)[,"beta1"])
abline(v=m1$coef[2])
chMvEo
seedlings <- read.table("http://goo.gl/chMvEo", header=TRUE)
seedlings <- read.table("http://goo.gl/chMvEo", header=TRUE)
